# -*- coding: utf-8 -*-
"""WS_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Za48q464nkUHq59X_7xnz2x1b4y7tC_s
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data = pd.read_csv("/content/drive/MyDrive/Sem 9/Mathematical Modelling/WS-4/upl_ltd.csv")

data

def linear_reg(x, y):
  n = len(x)
  x_y = [i*j for i,j in zip(x, y)]
  x_2 = [i**2 for i in x]
  b1 = (n*sum(x_y) - sum(x)*sum(y)) / (n*sum(x_2) - sum(x)**2)
  b0 = (1/n) * (sum(y) - b1*sum(x))
  print("\nModel Coefficients are:")
  print("\nb0: ", b0)
  print("\nb1: ", b1)
  print("\n")
  return [b0, b1]

def predict_val(b0, b1, x):
  ans = []

  for i in x:
    ans.append((b0 + b1*i))

  return ans

"""### **Part 1 - using open predicting close**"""

reg1 = LinearRegression()

reg1.fit(np.array(data['Open Price']).reshape(-1, 1), np.array(data['Close Price']).reshape(-1, 1))

a1 = reg1.coef_
b1 = reg1.intercept_
a1[0][0], b1[0]

coeff = linear_reg(data['Open Price'], data['Close Price'])
coeff

"""**Line equation** is  close_hat = 0.9751422508945023 * open + (16.67800748938891)"""

predicted_close = predict_val(coeff[0], coeff[1], data['Open Price'])
predicted_close

plt.plot(data['Date'], data['Close Price'], label='close')
plt.plot(data['Date'], predicted_close, label="predicted_close", color='red')
plt.xlabel("Date")
plt.ylabel("Close Price")
plt.legend(loc='lower right', ncol=2)
plt.show()

"""### **Part 2 - using low predicting high**"""

reg2 = LinearRegression()

reg2.fit(np.array(data['Low Price']).reshape(-1, 1), np.array(data['High Price']).reshape(-1, 1))

a2 = reg2.coef_
b2 = reg2.intercept_
a2[0][0], b2[0]

coeff = linear_reg(data['Low Price'], data['High Price'])
coeff

"""**Line equation** is  high_hat = 0.9828875179330402 * low + (33.32971565068534)"""

predicted_high = predict_val(coeff[0], coeff[1], data['Low Price'])
predicted_high

plt.plot(data['Date'], data['High Price'], label='high')
plt.plot(data['Date'], predicted_high, label="predicted_high", color='red')
plt.xlabel("Date")
plt.ylabel("High Price")
plt.legend(loc='lower right', ncol=2)
plt.show()

"""### **Part 3 - using open, high, low  and predicting close**"""

reg3 = LinearRegression()

reg3.fit(data[['Low Price', 'High Price', 'Open Price']], data['Close Price'])

a3 = reg3.coef_
b3 = reg3.intercept_
a3, b3

"""**Line equation** is  close_hat = 0.75557472 * low + 0.64509237 * high + -0.4001012 * open + (0.31858854014399185)"""

predicted_close = reg3.predict(data[['Low Price', 'High Price', 'Open Price']])
predicted_close

plt.plot(data['Date'], data['High Price'], label='close')
plt.plot(data['Date'], predicted_close, label="predicted_close", color='red')
plt.xlabel("Date")
plt.ylabel("Close Price")
plt.legend(loc='lower right', ncol=2)
plt.show()

